#if defined(FLUGEL_USE_GLFW) // API GUARD

#include "core/input/key_codes.hpp"

#include <GLFW/glfw3.h>

namespace ff {
  std::map<Key::Code, i32> Key::keyMap_{
    {Key::Unknown,      GLFW_KEY_UNKNOWN},
    //num row
    {Key::_1,           GLFW_KEY_1}, 
    {Key::_2,           GLFW_KEY_2}, 
    {Key::_3,           GLFW_KEY_3}, 
    {Key::_4,           GLFW_KEY_4}, 
    {Key::_5,           GLFW_KEY_5},
    {Key::_6,           GLFW_KEY_6},
    {Key::_7,           GLFW_KEY_7},
    {Key::_8,           GLFW_KEY_8},
    {Key::_9,           GLFW_KEY_9},
    {Key::_0,           GLFW_KEY_0}, 
    // numpad numbers
    {Key::Num1,         GLFW_KEY_KP_1},
    {Key::Num2,         GLFW_KEY_KP_2},
    {Key::Num3,         GLFW_KEY_KP_3},
    {Key::Num4,         GLFW_KEY_KP_4},
    {Key::Num5,         GLFW_KEY_KP_5},
    {Key::Num6,         GLFW_KEY_KP_6},
    {Key::Num7,         GLFW_KEY_KP_7},
    {Key::Num8,         GLFW_KEY_KP_8},
    {Key::Num9,         GLFW_KEY_KP_9},
    {Key::Num0,         GLFW_KEY_KP_0}, 
    // f-row part 1
    {Key::F1,           GLFW_KEY_F1},
    {Key::F2,           GLFW_KEY_F2},
    {Key::F3,           GLFW_KEY_F3},
    {Key::F4,           GLFW_KEY_F4},
    {Key::F5,           GLFW_KEY_F5},
    {Key::F6,           GLFW_KEY_F6},
    {Key::F7,           GLFW_KEY_F7},
    {Key::F8,           GLFW_KEY_F8},
    {Key::F9,           GLFW_KEY_F9},
    {Key::F10,          GLFW_KEY_F10}, 
    // f-row electric boogaloo
    {Key::F11,          GLFW_KEY_F11},
    {Key::F12,          GLFW_KEY_F12},
    {Key::F13,          GLFW_KEY_F13},
    {Key::F14,          GLFW_KEY_F14},
    {Key::F15,          GLFW_KEY_F15},
    {Key::F16,          GLFW_KEY_F16},
    {Key::F17,          GLFW_KEY_F17},
    {Key::F18,          GLFW_KEY_F18},
    {Key::F19,          GLFW_KEY_F19},
    {Key::F20,          GLFW_KEY_F20}, 
    // f-row part 3
    {Key::F21,          GLFW_KEY_F21},
    {Key::F22,          GLFW_KEY_F22},
    {Key::F23,          GLFW_KEY_F23},
    {Key::F24,          GLFW_KEY_F24},
    {Key::F25,          GLFW_KEY_F25}, 
    // letters
    {Key::A,            GLFW_KEY_A},
    {Key::B,            GLFW_KEY_B},
    {Key::C,            GLFW_KEY_C},
    {Key::D,            GLFW_KEY_D},
    {Key::E,            GLFW_KEY_E},
    {Key::F,            GLFW_KEY_F},
    {Key::G,            GLFW_KEY_G},
    {Key::H,            GLFW_KEY_H},
    {Key::I,            GLFW_KEY_I},
    {Key::J,            GLFW_KEY_J},
    {Key::K,            GLFW_KEY_K},
    {Key::L,            GLFW_KEY_L},
    {Key::M,            GLFW_KEY_M},
    {Key::N,            GLFW_KEY_N},
    {Key::O,            GLFW_KEY_O},
    {Key::P,            GLFW_KEY_P},
    {Key::Q,            GLFW_KEY_Q},
    {Key::R,            GLFW_KEY_R},
    {Key::S,            GLFW_KEY_S},
    {Key::T,            GLFW_KEY_T},
    {Key::U,            GLFW_KEY_U},
    {Key::V,            GLFW_KEY_V},
    {Key::W,            GLFW_KEY_W},
    {Key::X,            GLFW_KEY_X},
    {Key::Y,            GLFW_KEY_Y},
    {Key::Z,            GLFW_KEY_Z},
    // whitespace
    {Key::Space,        GLFW_KEY_SPACE},
    {Key::Tab,          GLFW_KEY_TAB},
    {Key::Enter,        GLFW_KEY_ENTER},
    {Key::NumEnter,     GLFW_KEY_KP_ENTER},
    // punctuation
    {Key::Semicolon,    GLFW_KEY_SEMICOLON},
    {Key::Period,       GLFW_KEY_PERIOD},
    {Key::Comma,        GLFW_KEY_COMMA},
    {Key::Apostrophe,   GLFW_KEY_APOSTROPHE},
    {Key::Accent,       GLFW_KEY_GRAVE_ACCENT},
    // math
    {Key::Minus,        GLFW_KEY_MINUS},
    {Key::Equal,        GLFW_KEY_EQUAL},
    {Key::ForwardSlash, GLFW_KEY_SLASH},
    {Key::BackSlash,    GLFW_KEY_BACKSLASH},
    // brackets
    {Key::LeftBracket,  GLFW_KEY_LEFT_BRACKET},
    {Key::RightBracket, GLFW_KEY_RIGHT_BRACKET},
    // non-visible
    {Key::Escape,       GLFW_KEY_ESCAPE},
    {Key::Menu,         GLFW_KEY_MENU},
    {Key::Pause,        GLFW_KEY_PAUSE},
    {Key::Backspace,    GLFW_KEY_BACKSPACE},
    {Key::Insert,       GLFW_KEY_INSERT},
    {Key::Delete,       GLFW_KEY_DELETE},
    {Key::PrintScreen,  GLFW_KEY_PRINT_SCREEN},
    // locks
    {Key::CapsLock,     GLFW_KEY_CAPS_LOCK},
    {Key::ScrollLock,   GLFW_KEY_SCROLL_LOCK},
    {Key::NumLock,      GLFW_KEY_NUM_LOCK},
    // direction
    {Key::Up,           GLFW_KEY_UP},
    {Key::Down,         GLFW_KEY_DOWN},
    {Key::Left,         GLFW_KEY_LEFT},
    {Key::Right,        GLFW_KEY_RIGHT},
    {Key::PageUp,       GLFW_KEY_PAGE_UP},
    {Key::PageDown,     GLFW_KEY_PAGE_DOWN},
    {Key::Home,         GLFW_KEY_HOME},
    {Key::End,          GLFW_KEY_END},
    // numpad math
    {Key::NumPeriod,    GLFW_KEY_KP_DECIMAL},
    {Key::NumPlus,      GLFW_KEY_KP_ADD},
    {Key::NumHyphen,    GLFW_KEY_KP_SUBTRACT},
    {Key::NumSlash,     GLFW_KEY_KP_DIVIDE},
    {Key::NumAsterisk,  GLFW_KEY_KP_MULTIPLY},
    {Key::NumEqual,     GLFW_KEY_KP_EQUAL},
    // left modifiers
    {Key::LeftShift,    GLFW_KEY_LEFT_SHIFT},
    {Key::LeftControl,  GLFW_KEY_LEFT_CONTROL},
    {Key::LeftAlt,      GLFW_KEY_LEFT_ALT},
    {Key::LeftSuper,    GLFW_KEY_LEFT_SUPER},
    // right modifiers
    {Key::RightShift,   GLFW_KEY_RIGHT_SHIFT},
    {Key::RightControl, GLFW_KEY_RIGHT_CONTROL},
    {Key::RightAlt,     GLFW_KEY_RIGHT_ALT},
    {Key::RightSuper,   GLFW_KEY_RIGHT_SUPER},
    // international
    {Key::World1,       GLFW_KEY_WORLD_1},
    {Key::World2,       GLFW_KEY_WORLD_2},
  };

  std::map<i32, Key::Code> Key::nativeMap_{
      {GLFW_KEY_UNKNOWN,      Key::Unknown},
      //num row
      {GLFW_KEY_1,            Key::_1},
      {GLFW_KEY_2,            Key::_2},
      {GLFW_KEY_3,            Key::_3},
      {GLFW_KEY_4,            Key::_4},
      {GLFW_KEY_5,            Key::_5},
      {GLFW_KEY_6,            Key::_6},
      {GLFW_KEY_7,            Key::_7},
      {GLFW_KEY_8,            Key::_8},
      {GLFW_KEY_9,            Key::_9},
      {GLFW_KEY_0,            Key::_0},
      // numpad numbers
      {GLFW_KEY_KP_1,         Key::Num1},
      {GLFW_KEY_KP_2,         Key::Num2},
      {GLFW_KEY_KP_3,         Key::Num3},
      {GLFW_KEY_KP_4,         Key::Num4},
      {GLFW_KEY_KP_5,         Key::Num5},
      {GLFW_KEY_KP_6,         Key::Num6},
      {GLFW_KEY_KP_7,         Key::Num7},
      {GLFW_KEY_KP_8,         Key::Num8},
      {GLFW_KEY_KP_9,         Key::Num9},
      {GLFW_KEY_KP_0,         Key::Num0},
      // f-row part 1
      {GLFW_KEY_F1 ,          Key::F1},
      {GLFW_KEY_F2 ,          Key::F2},
      {GLFW_KEY_F3 ,          Key::F3},
      {GLFW_KEY_F4 ,          Key::F4},
      {GLFW_KEY_F5 ,          Key::F5},
      {GLFW_KEY_F6 ,          Key::F6},
      {GLFW_KEY_F7 ,          Key::F7},
      {GLFW_KEY_F8 ,          Key::F8},
      {GLFW_KEY_F9 ,          Key::F9},
      {GLFW_KEY_F10,          Key::F10},
      // f-row electric boogaloo
      {GLFW_KEY_F11,          Key::F11},
      {GLFW_KEY_F12,          Key::F12},
      {GLFW_KEY_F13,          Key::F13},
      {GLFW_KEY_F14,          Key::F14},
      {GLFW_KEY_F15,          Key::F15},
      {GLFW_KEY_F16,          Key::F16},
      {GLFW_KEY_F17,          Key::F17},
      {GLFW_KEY_F18,          Key::F18},
      {GLFW_KEY_F19,          Key::F19},
      {GLFW_KEY_F20,          Key::F20},
      // f-row part 3
      {GLFW_KEY_F21,          Key::F21},
      {GLFW_KEY_F22,          Key::F22},
      {GLFW_KEY_F23,          Key::F23},
      {GLFW_KEY_F24,          Key::F24},
      {GLFW_KEY_F25,          Key::F25},
      // letters
      {GLFW_KEY_A,            Key::A},
      {GLFW_KEY_B,            Key::B},
      {GLFW_KEY_C,            Key::C},
      {GLFW_KEY_D,            Key::D},
      {GLFW_KEY_E,            Key::E},
      {GLFW_KEY_F,            Key::F},
      {GLFW_KEY_G,            Key::G},
      {GLFW_KEY_H,            Key::H},
      {GLFW_KEY_I,            Key::I},
      {GLFW_KEY_J,            Key::J},
      {GLFW_KEY_K,            Key::K},
      {GLFW_KEY_L,            Key::L},
      {GLFW_KEY_M,            Key::M},
      {GLFW_KEY_N,            Key::N},
      {GLFW_KEY_O,            Key::O},
      {GLFW_KEY_P,            Key::P},
      {GLFW_KEY_Q,            Key::Q},
      {GLFW_KEY_R,            Key::R},
      {GLFW_KEY_S,            Key::S},
      {GLFW_KEY_T,            Key::T},
      {GLFW_KEY_U,            Key::U},
      {GLFW_KEY_V,            Key::V},
      {GLFW_KEY_W,            Key::W},
      {GLFW_KEY_X,            Key::X},
      {GLFW_KEY_Y,            Key::Y},
      {GLFW_KEY_Z,            Key::Z},
      // whitespace
      {GLFW_KEY_SPACE   ,     Key::Space   },
      {GLFW_KEY_TAB     ,     Key::Tab     },
      {GLFW_KEY_ENTER   ,     Key::Enter   },
      {GLFW_KEY_KP_ENTER,     Key::NumEnter},
      // punctuation
      {GLFW_KEY_SEMICOLON   , Key::Semicolon },
      {GLFW_KEY_PERIOD      , Key::Period    },
      {GLFW_KEY_COMMA       , Key::Comma     },
      {GLFW_KEY_APOSTROPHE  , Key::Apostrophe},
      {GLFW_KEY_GRAVE_ACCENT, Key::Accent    },
      // math
      {GLFW_KEY_MINUS    ,    Key::Minus       },
      {GLFW_KEY_EQUAL    ,    Key::Equal       },
      {GLFW_KEY_SLASH    ,    Key::ForwardSlash},
      {GLFW_KEY_BACKSLASH,    Key::BackSlash   },
      // brackets
      {GLFW_KEY_LEFT_BRACKET , Key::LeftBracket },
      {GLFW_KEY_RIGHT_BRACKET, Key::RightBracket},
      // non-visible
      {GLFW_KEY_ESCAPE      ,  Key::Escape     },
      {GLFW_KEY_MENU        ,  Key::Menu       },
      {GLFW_KEY_PAUSE       ,  Key::Pause      },
      {GLFW_KEY_BACKSPACE   ,  Key::Backspace  },
      {GLFW_KEY_INSERT      ,  Key::Insert     },
      {GLFW_KEY_DELETE      ,  Key::Delete     },
      {GLFW_KEY_PRINT_SCREEN,  Key::PrintScreen},
      // locks
      {GLFW_KEY_CAPS_LOCK  ,   Key::CapsLock  },
      {GLFW_KEY_SCROLL_LOCK,   Key::ScrollLock},
      {GLFW_KEY_NUM_LOCK   ,   Key::NumLock   },
      // direction
      {GLFW_KEY_UP       ,     Key::Up      },
      {GLFW_KEY_DOWN     ,     Key::Down    },
      {GLFW_KEY_LEFT     ,     Key::Left    },
      {GLFW_KEY_RIGHT    ,     Key::Right   },
      {GLFW_KEY_PAGE_UP  ,     Key::PageUp  },
      {GLFW_KEY_PAGE_DOWN,     Key::PageDown},
      {GLFW_KEY_HOME     ,     Key::Home    },
      {GLFW_KEY_END      ,     Key::End     },
      // numpad math
      {GLFW_KEY_KP_DECIMAL ,  Key::NumPeriod  },
      {GLFW_KEY_KP_ADD     ,  Key::NumPlus    },
      {GLFW_KEY_KP_SUBTRACT,  Key::NumHyphen  },
      {GLFW_KEY_KP_DIVIDE  ,  Key::NumSlash   },
      {GLFW_KEY_KP_MULTIPLY,  Key::NumAsterisk},
      {GLFW_KEY_KP_EQUAL   ,  Key::NumEqual   },
      // left modifiers
      {GLFW_KEY_LEFT_SHIFT  ,   Key::LeftShift  },
      {GLFW_KEY_LEFT_CONTROL,   Key::LeftControl},
      {GLFW_KEY_LEFT_ALT    ,   Key::LeftAlt    },
      {GLFW_KEY_LEFT_SUPER  ,   Key::LeftSuper  },
      // right modifiers
      {GLFW_KEY_RIGHT_SHIFT  ,   Key::RightShift  },
      {GLFW_KEY_RIGHT_CONTROL,   Key::RightControl},
      {GLFW_KEY_RIGHT_ALT    ,   Key::RightAlt    },
      {GLFW_KEY_RIGHT_SUPER  ,   Key::RightSuper  },
      // international
      {GLFW_KEY_WORLD_1,       Key::World1},
      {GLFW_KEY_WORLD_2,       Key::World2},
  };

  std::map<Modifier::Code, i32> Modifier::modMap_{
    {Modifier::None    , 0                 },
    {Modifier::Shift   , GLFW_MOD_SHIFT    },
    {Modifier::Control , GLFW_MOD_CONTROL  },
    {Modifier::Alt     , GLFW_MOD_ALT      },
    {Modifier::Super   , GLFW_MOD_SUPER    },
    {Modifier::CapsLock, GLFW_MOD_CAPS_LOCK},
    {Modifier::NumLock , GLFW_MOD_NUM_LOCK },
  };

  std::map<i32, Modifier::Code> Modifier::nativeMap_{
      {0                 , Modifier::None    },
      {GLFW_MOD_SHIFT    , Modifier::Shift   },
      {GLFW_MOD_CONTROL  , Modifier::Control },
      {GLFW_MOD_ALT      , Modifier::Alt     },
      {GLFW_MOD_SUPER    , Modifier::Super   },
      {GLFW_MOD_CAPS_LOCK, Modifier::CapsLock},
      {GLFW_MOD_NUM_LOCK , Modifier::NumLock },
  };
}

#endif // API GUARD